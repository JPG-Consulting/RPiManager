#!/bin/bash

CHROOT_ARCH="i386"
CHROOT_DIR="/mnt"
DEBOOTSTRAP_DISTRIB="jessie"
DEBOOTSTRAP_MIRROR="http://ftp.us.debian.org/debian/"
IMAGE="/tmp/raspberry-manager.img"

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
    echo "Error: This script must be run as root."
    exit 1
fi

#------------------------------------------------#
#                 Pre-requisites                 #
#------------------------------------------------#

apt-get --yes -qq update
apt-get --yes -qq install debootstrap parted kpartx e2fsprogs wget ca-certificates
# An apt cache makes subsequent image-building much faster
apt-get --yes -qq install apt-cacher-ng
apt-get --yes -qq upgrade

#------------------------------------------------#
#                 Image creation                 #
#------------------------------------------------#
if [ -z $IMAGE ]; then
    IMAGE="/tmp/raspberry-manager.img"
fi

if [ -f $IMAGE ]; then
    rm $IMAGE
fi

dd if=/dev/zero of=$IMAGE bs=512 count=2000000

parted -s $IMAGE mklabel msdos
parted -s $IMAGE mkpart primary ext4 0% 100%
parted -s $IMAGE set 1 boot on

DEVICE=`kpartx -vas $IMAGE | sed -E 's/.*(loop[0-9])p.*/\1/g' | head -1`
DEVICE="/dev/mapper/${DEVICE}"
if [ -z $DEVICE ]; then
    echo "Error: Unable to locate the loopback device for the image file."
    kpartx -d $IMAGE
    exit 1
fi

LOOPBACK_PARTITION=${DEVICE}p1
if [ ! -b $LOOPBACK_PARTITION ]; then
    echo "Error: Can't find root image partition, as $LOOPBACK_PARTITION."
    kpartx -d $IMAGE
    exit 1
fi

mkfs.ext4 $LOOPBACK_PARTITION
if [ $? -ne 0 ]; then
    echo "Error: failed to format image file partition."
    kpartx -d $IMAGE
    exit 1
fi

tune2fs -c 0 -i 0 $LOOPBACK_PARTITION

#------------------------------------------------#
#                   Mount image                  #
#------------------------------------------------#
# Mount the partition
mount $LOOPBACK_PARTITION $CHROOT_DIR
if [ $? -ne 0 ]; then
    echo "Error: unable to mount image."
    kpartx -d $IMAGE
    exit 1
fi

#------------------------------------------------#
#              Set the base system               #
#------------------------------------------------#
# Setup the base Debian environment
debootstrap --arch=$CHROOT_ARCH --variant=minbase $DEBOOTSTRAP_DISTRIB $CHROOT_DIR $DEBOOTSTRAP_MIRROR
if [ $? -ne 0 ]; then
    echo "Error: Debootstrap existed with an error"
    umount -f $CHROOT_DIR
    kpartx -d $IMAGE
    exit 1
fi

#------------------------------------------------#
#             Chroot pre-requisites              #
#------------------------------------------------#
mount -o bind /dev /mnt/liveusb/dev
cp /etc/resolv.conf /mnt/liveusb/etc/resolv.conf


#------------------------------------------------#
#                    Clean up                    #
#------------------------------------------------#
umount -f $CHROOT_DIR
kpartx -d $IMAGE
