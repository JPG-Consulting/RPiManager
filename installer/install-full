#!/bin/bash

CHROOT_ARCH="i386"
CHROOT_DIR="/mnt"
DEBOOTSTRAP_DISTRIB="jessie"
DEBOOTSTRAP_MIRROR="http://ftp.us.debian.org/debian/"
IMAGE="/tmp/raspberry-manager.img"
KERNEL_VERSION="3.16.0-4-586"

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
    echo "Error: This script must be run as root."
    exit 1
fi

#------------------------------------------------#
#                 Pre-requisites                 #
#------------------------------------------------#

apt-get --yes -qq update
apt-get --yes -qq install debootstrap parted kpartx e2fsprogs wget ca-certificates
# An apt cache makes subsequent image-building much faster
apt-get --yes -qq install apt-cacher-ng
apt-get --yes -qq upgrade

#------------------------------------------------#
#                 Image creation                 #
#------------------------------------------------#
if [ -z $IMAGE ]; then
    IMAGE="/tmp/raspberry-manager.img"
fi

if [ -f $IMAGE ]; then
    rm $IMAGE
fi

dd if=/dev/zero of=$IMAGE bs=512 count=2000000

parted -s $IMAGE mklabel msdos
parted -s $IMAGE mkpart primary ext3 0% 100%
parted -s $IMAGE set 1 boot on

DEVICE=`kpartx -vas $IMAGE | sed -E 's/.*(loop[0-9])p.*/\1/g' | head -1`
if [ -z $DEVICE ]; then
    echo "Error: Unable to locate the loopback device for the image file."
    kpartx -d $IMAGE
    exit 1
fi

LOOPBACK_PARTITION="/dev/mapper/${DEVICE}p1"

if [ ! -b $LOOPBACK_PARTITION ]; then
    echo "Error: Can't find root image partition, as $LOOPBACK_PARTITION."
    kpartx -d $IMAGE
    exit 1
fi

DEVICE="/dev/${DEVICE}"

mkfs.ext3 $LOOPBACK_PARTITION
if [ $? -ne 0 ]; then
    echo "Error: failed to format image file partition."
    kpartx -d $IMAGE
    exit 1
fi

tune2fs -c 0 -i 0 $LOOPBACK_PARTITION

#------------------------------------------------#
#                   Mount image                  #
#------------------------------------------------#
# Mount the partition
mount $LOOPBACK_PARTITION $CHROOT_DIR
if [ $? -ne 0 ]; then
    echo "Error: unable to mount image."
    kpartx -d $IMAGE
    exit 1
fi

#------------------------------------------------#
#              Set the base system               #
#------------------------------------------------#
# Setup the base Debian environment
debootstrap --arch=$CHROOT_ARCH --variant=minbase $DEBOOTSTRAP_DISTRIB $CHROOT_DIR $DEBOOTSTRAP_MIRROR
if [ $? -ne 0 ]; then
    echo "Error: Debootstrap existed with an error"
    umount -lf $CHROOT_DIR
    kpartx -d $IMAGE
    exit 1
fi

#------------------------------------------------#
#             Chroot pre-requisites              #
#------------------------------------------------#
mount -o bind /dev $CHROOT_DIR/dev
cp /etc/resolv.conf $CHROOT_DIR/etc/resolv.conf

# The base system installer script
if [ ! -d $CHROOT_DIR/tmp/raspbian-manager-installer ]; then
    mkdir -p $CHROOT_DIR/tmp/raspbian-manager-installer
fi

wget https://raw.githubusercontent.com/JPG-Consulting/RPiManager/development/installer/chroot-installer -O $CHROOT_DIR/tmp/raspbian-manager-installer/chroot-installer
if [ $? -ne 0 ]; then
    echo "Error: Unable to download chroot environment installer."
    rm $CHROOT_DIR/etc/resolv.conf
    umount -lf $CHROOT_DIR
    kpartx -d $IMAGE
    exit 1
fi

chown root:root $CHROOT_DIR/tmp/raspbian-manager-installer/chroot-installer
chmod +x $CHROOT_DIR/tmp/raspbian-manager-installer/chroot-installer

#------------------------------------------------#
#                     Chroot                     #
#------------------------------------------------#
chroot $CHROOT_DIR /bin/bash -x <<'EOF'
mount none -t proc /proc
mount none -t sysfs /sys
mount none -t devpts /dev/pts
export HOME=/root
export LC_ALL=C
apt-get update
apt-get --yes --force-yes -qq install dialog dbus
dbus-uuidgen > /var/lib/dbus/machine-id
/tmp/raspbian-manager-installer/chroot-installer
exit
EOF

LOOPBACK_PARTITION_UUID="$(chroot "$CHROOT_DIR" blkid -o value -s UUID "$LOOPBACK_PARTITION")"

echo "<file system> <mount point>   <type>  <options>   <dump>  <pass>" > $CHROOT_DIR/etc/fstab
echo "UUID=${LOOPBACK_PARTITION_UUID} /    ext4    errors=remount-ro   0   1" >> $CHROOT_DIR/etc/fstab


# Chroot specific settings for full install
chroot $CHROOT_DIR /bin/bash -x <<'EOF'
apt-get --yes -qq install grub udev
[ -d /boot/grub ] || mkdir -p /boot/grub
update-grub
exit
EOF

chroot $CHROOT_DIR /bin/bash -x <<'EOF'
touch /root/it-is-me
rm -f /var/lib/dbus/machine-id
apt-get clean
umount -lf /proc
umount -lf /sys
umount -lf /dev/pts
exit
EOF

#------------------------------------------------#
#               Chroot clean up                  #
#------------------------------------------------#
rm $CHROOT_DIR/etc/resolv.conf
umount -lf $CHROOT_DIR/dev

#------------------------------------------------#
#               GRUB Post-config                 #
#------------------------------------------------#
#grub-install --root-directory=$CHROOT_DIR --recheck
grub-install $DEVICE --root-directory=$CHROOT_DIR

#------------------------------------------------#
#                    Clean up                    #
#------------------------------------------------#
umount -lf $CHROOT_DIR
kpartx -d $IMAGE
